{"version":3,"sources":["components/layout/Header.js","components/todos/TodoItem.js","components/todos/Todos.js","components/todos/AddTodo.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["headerStyle","background","color","textAlign","padding","linkStyle","textDecoration","Header","style","to","TodoItem","getStyle","borderBottom","props","todo","completed","this","id","title","type","onChange","toggleComplete","bind","onClick","delTodo","btnStyle","Component","border","borderRadius","cursor","float","Todos","todos","map","key","AddTodo","state","onSubmit","e","preventDefault","addTodo","setState","target","name","value","display","placeholder","flex","className","About","Fragment","href","App","axios","delete","then","res","filter","post","data","get","exact","path","render","component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0bcc51f1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header style={headerStyle}>\r\n      <h1>TodoList</h1>\r\n      <Link style={linkStyle} to=\"/\">\r\n        Home\r\n      </Link>{\" \"}\r\n      |{\" \"}\r\n      <Link style={linkStyle} to=\"/about\">\r\n        About\r\n      </Link>\r\n    </header>\r\n  );\r\n}\r\n\r\nconst headerStyle = {\r\n  background: \"#333\",\r\n  color: \"#fff\",\r\n  textAlign: \"center\",\r\n  padding: \"10px\",\r\n};\r\n\r\nconst linkStyle = {\r\n  color: \"#fff\",\r\n  textDecoration: \"none\",\r\n};\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class TodoItem extends Component {\r\n  getStyle = () => {\r\n    return {\r\n      background: \"#f4f4f4\",\r\n      padding: \"10px\",\r\n      borderBottom: \"1px #ccc dotted\",\r\n      textDecoration: this.props.todo.completed ? \"line-through\" : \"none\",\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const { id, title } = this.props.todo;\r\n    return (\r\n      <div style={this.getStyle()}>\r\n        <p>\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={this.props.toggleComplete.bind(this, id)}\r\n          />{\" \"}\r\n          {title}\r\n          <button onClick={this.props.delTodo.bind(this, id)} style={btnStyle}>\r\n            x\r\n          </button>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// PropTypes\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  toggleComplete: PropTypes.func.isRequired,\r\n  delTodo: PropTypes.func.isRequired,\r\n};\r\n\r\nconst btnStyle = {\r\n  background: \"#f00\",\r\n  color: \"#fff\",\r\n  border: \"none\",\r\n  padding: \"5px 9px\",\r\n  borderRadius: \"50%\",\r\n  cursor: \"pointer\",\r\n  float: \"right\",\r\n};\r\nexport default TodoItem;\r\n","import React, { Component } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Todos extends Component {\r\n  render() {\r\n    return this.props.todos.map((todo) => (\r\n      <TodoItem\r\n        key={todo.id}\r\n        todo={todo}\r\n        toggleComplete={this.props.toggleComplete}\r\n        delTodo={this.props.delTodo}\r\n      />\r\n    ));\r\n  }\r\n}\r\n\r\n// PropTypes\r\nTodos.propTypes = {\r\n  todos: PropTypes.array.isRequired,\r\n  toggleComplete: PropTypes.func.isRequired,\r\n  delTodo: PropTypes.func.isRequired,\r\n};\r\nexport default Todos;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class AddTodo extends Component {\r\n  state = {\r\n    title: \"\",\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.addTodo(this.state.title);\r\n    this.setState({ title: \"\" });\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onSubmit} style={{ display: \"flex\" }}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          placeholder=\"Add Todo...\"\r\n          style={{ flex: \"10\", padding: \"5px\" }}\r\n          value={this.state.title}\r\n          onChange={this.onChange}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Submit\"\r\n          className=\"btn\"\r\n          style={{ flex: \"1\" }}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n// PropTypes\r\nAddTodo.propTypes = {\r\n  AddTodo: PropTypes.func.isRequired,\r\n};\r\nexport default AddTodo;\r\n","import React from \"react\";\r\n\r\nfunction About() {\r\n  return (\r\n    <React.Fragment>\r\n      <h1>About</h1>\r\n      <p>\r\n        This is the{\" \"}\r\n        <a href=\"https://www.youtube.com/watch?v=sBws8MSXN7A\">\r\n          TodoList app v1.0.0.\r\n        </a>{\" \"}\r\n        It is part of a React crash course.\r\n      </p>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Header from \"./components/layout/Header\";\r\nimport Todos from \"./components/todos/Todos\";\r\nimport AddTodo from \"./components/todos/AddTodo\";\r\nimport About from \"./components/pages/About\";\r\nimport axios from \"axios\";\r\n// import uuid from \"uuid\";\r\n\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    todos: [\r\n      // Attempted import error: 'uuid' does not contain a default export (imported as 'uuid').\r\n      // {\r\n      //   id: uuid.v4(),\r\n      //   title: \"\",\r\n      //   completed: false,\r\n      // },\r\n    ],\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://jsonplaceholder.typicode.com/todos?_limit=10\")\r\n      .then((res) => this.setState({ todos: res.data }));\r\n  }\r\n  // Toggle Completed\r\n  toggleComplete = (id) => {\r\n    this.setState({\r\n      todos: this.state.todos.map((todo) => {\r\n        if (todo.id === id) {\r\n          todo.completed = !todo.completed;\r\n        }\r\n        return todo;\r\n      }),\r\n    });\r\n  };\r\n\r\n  // Delete Todo\r\n  delTodo = (id) => {\r\n    axios\r\n      .delete(`http://jsonplaceholder.typicode.com/todos/${id}`)\r\n      .then((res) =>\r\n        this.setState({\r\n          todos: [...this.state.todos.filter((todo) => todo.id !== id)],\r\n        })\r\n      );\r\n  };\r\n\r\n  // Add Todo\r\n  addTodo = (title) => {\r\n    axios\r\n      .post(\"http://jsonplaceholder.typicode.com/todos\", {\r\n        title,\r\n        completed: false,\r\n      })\r\n      .then((res) => this.setState({ todos: [...this.state.todos, res.data] }));\r\n    // Really should put a catch statement in here.\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <div className=\"container\">\r\n            <Header />\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={(props) => (\r\n                <React.Fragment>\r\n                  <AddTodo addTodo={this.addTodo} />\r\n                  <Todos\r\n                    todos={this.state.todos}\r\n                    toggleComplete={this.toggleComplete}\r\n                    delTodo={this.delTodo}\r\n                  />\r\n                </React.Fragment>\r\n              )}\r\n            />\r\n            <Route path=\"/about\" component={About} />\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}